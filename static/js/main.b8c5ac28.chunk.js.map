{"version":3,"sources":["hooks/useAxios.js","redux/actionTypes.js","redux/actions.js","components/Questions.js","components/Amount.js","components/Settings.js","components/FinalScreen.js","components/QuestionList.js","components/QuestionUpdate.js","crud/crudRequests.js","components/AddQuestion.js","components/Home.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","useAxios","url","useState","response","setResponse","error","setError","loading","setLoading","amount_of_questions","useSelector","state","useEffect","get","then","res","data","slice","catch","err","finally","CHANGE_AMOUNT","CHANGE_SCORE","handleScoreChange","payload","type","handleAmountChange","Questions","score","dispatch","useDispatch","questionIndex","setQuestionIndex","options","setOptions","navigate","useNavigate","length","question","console","log","correctAnswer","answer","answers","wrongAnswers","splice","max","Math","floor","random","handleClickAnswer","e","target","textContent","alert","className","map","id","onClick","Amount","onSubmit","preventDefault","onChange","value","label","placeholder","min","defaultValue","Settings","override","css","FinalScreen","QuestionsUpdate","questions","setQuestions","totalQuestions","setTotalQuestions","to","_id","QuestionUpdate","formState","setFormState","individualQuestion","setIndividualQuestion","corr","setCorr","inc1","setInc1","inc2","setInc2","inc3","setInc3","params","useParams","questionId","updatedQuestion","updatedCorrect","updatedIncorrect1","updatedIncorrect2","updatedIncorrect3","put","name","delete","AddQuestion","wrongAnswers1","wrongAnswers2","wrongAnswers3","addQuestion","setAddQuestion","submitObject","setSubmitObject","handleChange","newQuestion","post","Home","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","createStore","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c5ac28.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\naxios.defaults.baseURL = 'https://frontend-interview-quiz.herokuapp.com/api/javascript';\r\n\r\nconst useAxios = ({ url }) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const { amount_of_questions } = useSelector((state) => state);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .get(url)\r\n        .then((res) => setResponse(res.data.slice(0, amount_of_questions)))\r\n        .catch((err) => setError(err))\r\n        .finally(() => setLoading(false));\r\n    };\r\n    fetchData();\r\n  }, [url, amount_of_questions]);\r\n\r\n  return {\r\n    response,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useAxios;\r\n","export const CHANGE_AMOUNT = 'CHANGE_AMOUNT';\r\nexport const CHANGE_SCORE = 'CHANGE_SCORE';\r\n","import { CHANGE_AMOUNT, CHANGE_SCORE } from './actionTypes';\r\n\r\nexport const handleScoreChange = (payload) => ({\r\n  type: CHANGE_SCORE,\r\n  payload,\r\n});\r\n\r\nexport const handleAmountChange = (payload) => ({\r\n  type: CHANGE_AMOUNT,\r\n  payload,\r\n});\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport useAxios from '../hooks/useAxios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { handleScoreChange } from '../redux/actions';\r\n\r\nconst getRandomInt = (max) => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\r\nconst Questions = () => {\r\n  let apiUrl = 'https://frontend-interview-quiz.herokuapp.com/api/javascript';\r\n  const { response, loading } = useAxios({ url: apiUrl });\r\n  const { amount_of_questions, score } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [options, setOptions] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (response?.length) {\r\n      const question = response[questionIndex];\r\n      console.log('question', question.correctAnswer.answer);\r\n      let answers = [...question.wrongAnswers];\r\n      answers.splice(\r\n        getRandomInt(question.wrongAnswers.length),\r\n        0,\r\n        question.correctAnswer\r\n      );\r\n      setOptions(answers);\r\n    }\r\n  }, [response, questionIndex]);\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  console.log('response', response);\r\n  console.log('optionsoutsideofuse', options);\r\n\r\n  const handleClickAnswer = (e) => {\r\n    const question = response[questionIndex];\r\n\r\n    if (e.target.textContent === question.correctAnswer.answer) {\r\n      dispatch(handleScoreChange(score + 1));\r\n    } else {\r\n      alert(`Correct Answer: ${question.correctAnswer.answer}`);\r\n    }\r\n\r\n    if (questionIndex + 1 < response.length) {\r\n      setQuestionIndex(questionIndex + 1);\r\n    } else {\r\n      navigate('/score');\r\n    }\r\n  };\r\n  console.log('responselength', response.length);\r\n\r\n  return (\r\n    <div className='questions-wrapper'>\r\n      <div className='question-wrapper border'>\r\n        <h1>Question #{questionIndex + 1}</h1>\r\n        <h2>{response[questionIndex].question}</h2>\r\n        {options.map((data, id) => (\r\n          <button onClick={handleClickAnswer} key={id}>\r\n            {data.answer}\r\n          </button>\r\n        ))}\r\n        <div>\r\n          <h4 className='score'>\r\n            Score: {score} / {amount_of_questions}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { handleAmountChange } from '../redux/actions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Amount = () => {\r\n  const { amount_of_questions } = useSelector((state) => state);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(handleAmountChange(e.target.value));\r\n    console.log('value', e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    navigate('/questions');\r\n  };\r\n\r\n  return (\r\n    <div className='amount-wrapper'>\r\n      <p>How many questions?</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <input\r\n            className='amount-input'\r\n            onChange={handleChange}\r\n            label='Amount of Questions'\r\n            placeholder={amount_of_questions}\r\n            type='number'\r\n            min={0}\r\n            max={100}\r\n            defaultValue={100}></input>\r\n        </label>\r\n        <button type='submit'>Start Quizzing</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Amount;\r\n","import React from 'react';\r\nimport Amount from './Amount';\r\nimport useAxios from '../hooks/useAxios';\r\nimport PropagateLoader from 'react-spinners/ClipLoader';\r\nimport { css } from '@emotion/react';\r\n\r\nconst Settings = () => {\r\n  const { loading } = useAxios({ url: '/api_category' });\r\n\r\n  const override = css`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n  `;\r\n\r\n  if (loading) {\r\n    return <PropagateLoader css={override} />;\r\n  }\r\n\r\n  return (\r\n    <div className='settings-wrapper'>\r\n      <div className='border'>\r\n        <h1>Quiz Settings</h1>\r\n        <Amount />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { handleAmountChange, handleScoreChange } from '../redux/actions';\r\n\r\nconst FinalScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { score, amount_of_questions } = useSelector((state) => state);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    dispatch(handleScoreChange(0));\r\n    dispatch(handleAmountChange(100));\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"final-wrapper\">\r\n      <h1>Good job! You finished!</h1>\r\n      <h3>\r\n        Final Score: {score} / {amount_of_questions}\r\n      </h3>\r\n      <button onClick={handleClick}>Restart</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport PropagateLoader from 'react-spinners/ClipLoader';\r\nimport { css } from '@emotion/react';\r\n\r\nconst QuestionsUpdate = () => {\r\n  const [questions, setQuestions] = useState();\r\n  const [totalQuestions, setTotalQuestions] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const override = css`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://frontend-interview-quiz.herokuapp.com/api/javascript')\r\n      .then((response) => {\r\n        setQuestions(response.data);\r\n        setTotalQuestions(response.data.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  if (!questions) {\r\n    return <PropagateLoader css={override} />;\r\n  }\r\n\r\n  return (\r\n    <div className='question-list-wrapper'>\r\n      <h1>Add, Update or Delete Questions</h1>\r\n      <h3>Total Questions: {totalQuestions}</h3>\r\n      <button\r\n        onClick={() => {\r\n          navigate('/add');\r\n        }}>\r\n        Add a question\r\n      </button>\r\n      {questions &&\r\n        questions.map((question) => {\r\n          return (\r\n            <div className='individual-question' key={question._id}>\r\n              <Link to={`/update/${question._id}`}>\r\n                <p>{question.question}</p>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsUpdate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { updateQuestion, deleteQuestion } from '../crud/crudRequests';\r\nimport { useNavigate } from 'react-router';\r\nimport PropagateLoader from 'react-spinners/ClipLoader';\r\nimport { css } from '@emotion/react';\r\n\r\nconst QuestionUpdate = () => {\r\n  const [formState, setFormState] = useState();\r\n  const [individualQuestion, setIndividualQuestion] = useState();\r\n  const [corr, setCorr] = useState();\r\n  const [inc1, setInc1] = useState();\r\n  const [inc2, setInc2] = useState();\r\n  const [inc3, setInc3] = useState();\r\n\r\n  const override = css`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n  `;\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setFormState({\r\n      ...formState,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    deleteQuestion(params.questionId);\r\n    alert('question has been deleted');\r\n    navigate('/update');\r\n  };\r\n  console.log('inc1', inc1);\r\n  console.log('inc2', inc2);\r\n  console.log('inc3', inc3);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    updateQuestion(\r\n      params.questionId,\r\n      formState.question,\r\n      corr,\r\n      inc1,\r\n      inc2,\r\n      inc3\r\n    );\r\n    alert('question has been updated');\r\n    navigate('/update');\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://frontend-interview-quiz.herokuapp.com/api/javascript/find/${params.questionId}`\r\n      )\r\n      .then((res) => {\r\n        setIndividualQuestion(res.data);\r\n        setFormState(res.data);\r\n        setCorr(res.data.correctAnswer.answer);\r\n        setInc1(res.data.wrongAnswers[0].answer);\r\n        setInc2(res.data.wrongAnswers[1].answer);\r\n        setInc3(res.data.wrongAnswers[2].answer);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [params.questionId]);\r\n\r\n  if (!individualQuestion) {\r\n    return <PropagateLoader css={override} />;\r\n  }\r\n\r\n  return (\r\n    <div className='update-question-wrapper'>\r\n      <h1>Update individual questions</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Question</label>\r\n        <input\r\n          placeholder={individualQuestion.question}\r\n          onChange={handleChange}\r\n          type='text'\r\n          name='question'\r\n        />\r\n        <label>Correct Answer</label>\r\n        <input\r\n          placeholder={individualQuestion.correctAnswer.answer}\r\n          onChange={(e) => setCorr(e.target.value)}\r\n          type='text'\r\n          name='answer'\r\n        />\r\n        <label>First Incorrect Answer</label>\r\n        <input\r\n          placeholder={individualQuestion.wrongAnswers[0].answer}\r\n          onChange={(e) => setInc1(e.target.value)}\r\n          type='text'\r\n          name='incorrect1'\r\n        />\r\n        <label>Second Incorrect Answer</label>\r\n        <input\r\n          placeholder={individualQuestion.wrongAnswers[1].answer}\r\n          onChange={(e) => setInc2(e.target.value)}\r\n          type='text'\r\n          name='incorrect2'\r\n        />\r\n        <label>Third Incorrect Answer</label>\r\n        <input\r\n          placeholder={individualQuestion.wrongAnswers[2].answer}\r\n          onChange={(e) => setInc3(e.target.value)}\r\n          type='text'\r\n          name='incorrect3'\r\n        />\r\n        <input\r\n          type='submit'\r\n          className='update-button'\r\n          value='Update Question'\r\n        />\r\n        <button className='delete-question' onClick={handleClick}>\r\n          Delete Question\r\n        </button>\r\n        <button\r\n          className='back-to'\r\n          onClick={() => {\r\n            navigate('/update');\r\n          }}>\r\n          Back to List\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionUpdate;\r\n","import axios from 'axios';\r\n\r\nconst createQuestion = (newQuestion) => {\r\n  axios\r\n    .post(\r\n      'https://frontend-interview-quiz.herokuapp.com/api/javascript',\r\n      newQuestion\r\n    )\r\n    .then((response) => {\r\n      console.log('response', response);\r\n    })\r\n    .catch((error) => {\r\n      console.log('error', error);\r\n    });\r\n};\r\n\r\nconst updateQuestion = (\r\n  id,\r\n  updatedQuestion,\r\n  updatedCorrect,\r\n  updatedIncorrect1,\r\n  updatedIncorrect2,\r\n  updatedIncorrect3\r\n) => {\r\n  axios\r\n    .put(`https://frontend-interview-quiz.herokuapp.com/api/javascript/${id}`, {\r\n      question: updatedQuestion,\r\n      correctAnswer: { answer: updatedCorrect },\r\n      wrongAnswers: [\r\n        { answer: updatedIncorrect1 },\r\n        { answer: updatedIncorrect2 },\r\n        { answer: updatedIncorrect3 },\r\n      ],\r\n    })\r\n    .then((response) => {\r\n      console.log('response', response);\r\n    })\r\n    .catch((error) => {\r\n      console.log('put error', error);\r\n    });\r\n};\r\n\r\nconst deleteQuestion = (id) => {\r\n  axios\r\n    .delete(\r\n      `https://frontend-interview-quiz.herokuapp.com/api/javascript/${id}`\r\n    )\r\n    .then((response) => {\r\n      console.log(response);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport { createQuestion, updateQuestion, deleteQuestion };\r\n","import React, { useState } from 'react';\r\nimport { createQuestion } from '../crud/crudRequests';\r\n\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst AddQuestion = () => {\r\n  const [addQuestion, setAddQuestion] = useState({\r\n    question: '',\r\n    correctAnswer: '',\r\n    wrongAnswers1: '',\r\n    wrongAnswers2: '',\r\n    wrongAnswers3: '',\r\n  });\r\n  const [submitObject, setSubmitObject] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setAddQuestion({\r\n      ...addQuestion,\r\n      [e.target.name]: value,\r\n    });\r\n    setSubmitObject({\r\n      question: addQuestion.question,\r\n      correctAnswer: { answer: addQuestion.correctAnswer },\r\n      wrongAnswers: [\r\n        { answer: addQuestion.wrongAnswers1 },\r\n        { answer: addQuestion.wrongAnswers2 },\r\n        { answer: addQuestion.wrongAnswers3 },\r\n      ],\r\n    });\r\n  };\r\n  console.log('addQuestion State', addQuestion);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createQuestion(submitObject);\r\n    alert('question has been added!');\r\n    navigate('/update');\r\n  };\r\n\r\n  return (\r\n    <div className='add-question'>\r\n      <h1>Add a Question</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Question</label>\r\n        <input\r\n          placeholder={'Question?'}\r\n          onChange={handleChange}\r\n          type='text'\r\n          name='question'\r\n        />\r\n        <label>Correct Answer</label>\r\n        <input\r\n          placeholder={'Correct answer'}\r\n          onChange={handleChange}\r\n          type='text'\r\n          name='correctAnswer'\r\n        />\r\n        <label>First Incorrect Answer</label>\r\n        <input\r\n          placeholder={'First incorrect answer'}\r\n          onChange={handleChange}\r\n          type='text'\r\n          id='wrongAnswers1'\r\n          name='wrongAnswers1'\r\n        />\r\n        <label>Second Incorrect Answer</label>\r\n        <input\r\n          placeholder={'Second incorrect answer'}\r\n          onChange={handleChange}\r\n          type='text'\r\n          id='wrongAnswers2'\r\n          name='wrongAnswers2'\r\n        />\r\n        <label>Third Incorrect Answer</label>\r\n        <input\r\n          placeholder={'Second incorrect answer'}\r\n          onChange={handleChange}\r\n          type='text'\r\n          id='wrongAnswers3'\r\n          name='wrongAnswers3'\r\n        />\r\n        <input className='submit-add' type='submit' value='Add Question' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className='home-wrapper'>\r\n      <div className='info-container'>\r\n        <h1>JavaScript Quiz Application</h1>\r\n        <h3>The fun way to learn and study JavaScript!</h3>\r\n        <button onClick={() => navigate('/settings')}>Get started</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Questions from './components/Questions';\nimport Settings from './components/Settings';\nimport FinalScreen from './components/FinalScreen';\nimport QuestionsList from './components/QuestionList';\nimport QuestionUpdate from './components/QuestionUpdate';\nimport AddQuestion from './components/AddQuestion';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/settings' element={<Settings />} />\n          <Route path='/questions' element={<Questions />} />\n          <Route path='/score' element={<FinalScreen />} />\n          <Route path='/update' element={<QuestionsList />} />\n          <Route path='update/:questionId' element={<QuestionUpdate />} />\n          <Route path='/add' element={<AddQuestion />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CHANGE_AMOUNT, CHANGE_SCORE } from './actionTypes';\r\n\r\nconst initialState = {\r\n  amount_of_questions: 3,\r\n  score: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_AMOUNT:\r\n      return {\r\n        ...state,\r\n        amount_of_questions: action.payload,\r\n      };\r\n    case CHANGE_SCORE:\r\n      return {\r\n        ...state,\r\n        score: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nexport default createStore(reducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}